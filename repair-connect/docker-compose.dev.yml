version: '3.8'

services:
  # Development Next.js with hot reload
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: repair-connect-app-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      # Development MongoDB without authentication for simplicity
      - MONGODB_URI=mongodb://mongodb:27017/repair-connect
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - repair-connect-network
    command: npm run dev

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: repair-connect-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: repair-connect
    volumes:
      - mongodb_dev_data:/data/db
      - mongodb_dev_config:/data/configdb
    networks:
      - repair-connect-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  repair-connect-network:
    driver: bridge

volumes:
  mongodb_dev_data:
    driver: local
  mongodb_dev_config:
    driver: local
