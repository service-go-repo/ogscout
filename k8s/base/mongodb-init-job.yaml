# ============================================
# MongoDB Initialization Job
# Creates application database and user
# ============================================

apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-init
  labels:
    app: mongodb
    component: database-init
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      labels:
        app: mongodb
        component: database-init
    spec:
      restartPolicy: OnFailure
      containers:
      - name: mongodb-init
        image: mongo:7.0
        command:
        - /bin/bash
        - -c
        - |
          echo "Waiting for MongoDB to be ready..."
          until mongosh --host mongodb --username $MONGO_ROOT_USERNAME --password $MONGO_ROOT_PASSWORD --authenticationDatabase admin --eval "db.adminCommand('ping')" > /dev/null 2>&1; do
            echo "MongoDB not ready, waiting..."
            sleep 5
          done

          echo "MongoDB is ready, creating database and user..."

          mongosh --host mongodb --username $MONGO_ROOT_USERNAME --password $MONGO_ROOT_PASSWORD --authenticationDatabase admin <<EOF
          use repair-connect

          // Create application user if doesn't exist
          if (!db.getUser("$APP_USERNAME")) {
            db.createUser({
              user: "$APP_USERNAME",
              pwd: "$APP_PASSWORD",
              roles: [
                { role: "readWrite", db: "repair-connect" },
                { role: "dbAdmin", db: "repair-connect" }
              ]
            });
            print("Application user created successfully");
          } else {
            print("Application user already exists");
          }

          // Create indexes for better performance
          db.users.createIndex({ "email": 1 }, { unique: true });
          db.workshops.createIndex({ "email": 1 }, { unique: true });
          db.cars.createIndex({ "userId": 1 });
          db.quotations.createIndex({ "userId": 1 });
          db.quotations.createIndex({ "workshopId": 1 });
          db.appointments.createIndex({ "userId": 1 });
          db.appointments.createIndex({ "workshopId": 1 });
          db.serviceRequests.createIndex({ "userId": 1 });

          print("Database initialization completed!");
          EOF

          echo "Initialization complete!"

        env:
        - name: MONGO_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_ROOT_USERNAME
        - name: MONGO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_ROOT_PASSWORD
        - name: APP_USERNAME
          value: "repair-connect-app"
        - name: APP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ogscout-secrets
              key: MONGODB_PASSWORD
              optional: true
